{"version":3,"sources":["../../src/components/Route.js"],"names":["Route","props","routeLocation","args","kwargs","childLocation","currentMatch","previousKwargs","context","getRouteLocation","isMatched","dispatch","getRoutePath","absName","getKwargs","setMatch","_props","_context","absolute","getChildLocation","routing","location","pathname","bind","matchedRoute","routeArgs","_","cloneDeep","getRouteKwargs","routePath","parentKwargs","Object","assign","name","path","flag","getSubRouteLocation","matchInfo","matchString","nextProps","nextState","nextContext","matched","update","isEqual","updateProps","children","type","component","React","cloneElement","Array","isArray","className","Component","childContextTypes","PropTypes","func","object","array","string","state"],"mappings":"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","file":"Route.js","sourcesContent":["/**\n * Created by sidchik on 28.03.17.\n */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { getRegs, getMatchInfo } from '../helpers/matcher';\nimport { setCurrentRoute, setRouteKwargs } from '../actions/routing';\nimport { addRoutingContext } from '../helpers/context';\n\nclass Route extends React.Component {\n    routeLocation = '/';\n    args = [];\n    kwargs = {};\n    childLocation = null;\n    currentMatch = false;\n\n    constructor(props) {\n        super(props);\n        this.routeLocation = (this.context && this.context.getRouteLocation ? this.context.getRouteLocation() : '');\n        this.childLocation = (this.context && this.context.childLocation ? this.context.childLocation() : '');\n        this.isMatched();\n\n        this.previousKwargs = this.kwargs;\n        props.dispatch(setRouteKwargs(this.getRoutePath(), props.absName, this.getKwargs()));\n        if (this.currentMatch) {\n            props.dispatch(setCurrentRoute(this));\n        }\n        this.setMatch(false);\n    }\n\n    getSubRouteLocation(_props, _context) {\n        let props = _props || this.props;\n        let context = _context || this.context;\n        if (!props.absolute && context && context.getChildLocation) return context.getChildLocation();\n        if (props.routing && props.routing.location) return props.routing.location.pathname;\n        return '';\n    }\n\n    getChildContext() {\n        return {\n            getChildLocation: this.getChildLocation.bind(this),\n            getRouteLocation: this.getRouteLocation.bind(this),\n            matchedRoute: this,\n            routeArgs: _.cloneDeep(this.args),\n            getRouteKwargs: this.getKwargs.bind(this),\n            routePath: this.getRoutePath()\n        };\n    }\n\n    getChildLocation() {\n        return this.childLocation;\n    }\n\n    getRouteLocation() {\n        return this.routeLocation;\n    }\n\n    getKwargs() {\n        let parentKwargs = (this.context && this.context.getRouteKwargs) ? this.context.getRouteKwargs() : null || {};\n        return Object.assign({}, parentKwargs, _.cloneDeep(this.kwargs));\n    }\n\n    getRoutePath() {\n        let name = this.props.name ? (this.props.name + '/') : '';\n        return (this.context && this.context.routePath ? this.context.routePath : '') + (name || this.props.path);\n    }\n\n\n    setMatch(flag) {\n        this.currentMatch = flag;\n        return flag;\n    }\n\n    isMatched() {\n        if (!this.props.path) return this.setMatch(true);\n        let location = this.getSubRouteLocation();\n\n        this.args = [];\n        this.kwargs = {};\n        let matchInfo = getMatchInfo(location, this.props.path);\n\n        if (!matchInfo) return this.setMatch(false);\n        this.args = matchInfo.args;\n        this.kwargs = matchInfo.kwargs;\n        this.childLocation = matchInfo.childLocation;\n        this.routeLocation = (this.context && this.context.getRouteLocation ? this.context.getRouteLocation() : '') + matchInfo.matchString;\n        return this.setMatch(true);\n    }\n\n    componentWillUnmount() {\n        this.setMatch(false);\n    }\n\n    previousKwargs = {};\n\n    shouldComponentUpdate(nextProps, nextState, nextContext) {\n        if (!nextProps.path) return true;\n        let location = this.getSubRouteLocation(nextProps, nextContext);\n\n        let matchInfo = getMatchInfo(location, nextProps.path);\n        let matched = matchInfo !== false;\n        if (matched) {\n            this.args = matchInfo.args;\n            this.kwargs = matchInfo.kwargs;\n            this.childLocation = matchInfo.childLocation;\n        }\n\n        let update = this.currentMatch !== matched;\n        if (!update && matched) {\n            if (!_.isEqual(this.kwargs, this.previousKwargs)) {\n                this.previousKwargs = this.kwargs;\n                update = true;\n                this.props.dispatch(setRouteKwargs(this.getRoutePath(), nextProps.absName, this.getKwargs()));\n            }\n        }\n\n        if (update) {\n            this.props.dispatch(setCurrentRoute(this));\n        }\n        return update;\n    }\n\n    componentWillUpdate() {\n        this.props.dispatch(setRouteKwargs(this.getRoutePath(), this.props.absName, this.getKwargs()));\n    }\n\n    render() {\n        if (this.isMatched()) {\n            let updateProps = {};\n\n            if (this.props.path && typeof(this.props.children.type) === 'function') {\n                updateProps['kwargs'] = this.getKwargs();\n            }\n\n            if (this.props.component) return React.cloneElement(this.props.component, updateProps);\n\n            if (Array.isArray(this.props.children)) return <div\n                className={this.props.className}>{this.props.children}</div>;\n\n            if (this.props.children) return React.cloneElement(this.props.children, updateProps);\n        }\n        return null;\n    }\n}\n\nRoute.childContextTypes = {\n    getChildLocation: PropTypes.func,\n    getRouteLocation: PropTypes.func,\n    matchedRoute: PropTypes.object,\n    routeArgs: PropTypes.array,\n    getRouteKwargs: PropTypes.func,\n    routePath: PropTypes.string,\n};\n\n\naddRoutingContext(Route);\nexport default connect(state => ({ routing: state.routing }))(Route);"]}