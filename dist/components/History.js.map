{"version":3,"sources":["../../src/components/History.js"],"names":["createHistory","historyType","historyCreator","createHashHistory","createBrowserHistory","createMemoryHistory","History","query","props","history","state","location","action","dispatch","extractQuery","unlisten","listen","setState","routing","React","Children","only","children","Component","mapStateToProps","HashHistory","BrowserHistory","MemoryHistory"],"mappings":";;;;;;;;;AAGA;;;;AACA;;AACA;;AACA;;;;;;;;+eANA;;;;;AAQA,IAAMA,gBAAgB,SAAhBA,aAAgB,CAACC,WAAD,EAAiB;AACnC,QAAIC,uBAAJ;AACA,YAAQD,WAAR;AACI,aAAK,MAAL;AACIC,6BAAiBC,0BAAjB;AACA;AACJ,aAAK,SAAL;AACID,6BAAiBE,6BAAjB;AACA;AACJ,aAAK,QAAL;AACIF,6BAAiBG,4BAAjB;AACA;AACJ;AACIH,6BAAiBC,0BAAjB;AAXR;;AAFmC,QAgB7BG,OAhB6B;AAAA;;AAAA;AAAA;AAAA,yCAoBlBC,KApBkB,EAoBX;AAChB,uBAAO,EAAP;AACH;AAtB8B;;AAwB/B,yBAAYC,KAAZ,EAAmB;AAAA;;AAAA,0HACTA,KADS;;AAAA,kBAPnBC,OAOmB,GAPTP,gBAOS;;AAEf,kBAAKQ,KAAL,GAAa;AACTC,0BAAU,IADD;AAETC,wBAAQ;AAFC,aAAb;AAIAJ,kBAAMK,QAAN,CAAe,0BAAY;AACvBZ,6BAAaA,WADU;AAEvBQ,yBAAS,MAAKA,OAFS;AAGvBE,0BAAU,MAAKF,OAAL,CAAaE,QAHA;AAIvBJ,uBAAO,MAAKO,YAAL;AAJgB,aAAZ,CAAf;;AAOA,kBAAKC,QAAL,GAAgB,MAAKN,OAAL,CAAaO,MAAb,CAAoB,UAACL,QAAD,EAAWC,MAAX,EAAsB;AACtD;AACA,sBAAKK,QAAL,CAAc;AACVN,8BAAUA,QADA;AAEVC,4BAAQA;AAFE,iBAAd,EAGG,YAAY;AACXJ,0BAAMK,QAAN,CAAe,0BAAY;AACvBF,kCAAU,KAAKD,KAAL,CAAWC,QADE;AAEvBJ,+BAAO,KAAKO,YAAL;AAFgB,qBAAZ,CAAf;AAIH,iBARD;AASH,aAXe,CAAhB;;AAbe;AA0BlB;;AAlD8B;AAAA;AAAA,iDAoDV,CAEpB;AAtD8B;AAAA;AAAA,mDAwDR;AACnB,qBAAKC,QAAL;AACH;AA1D8B;AAAA;AAAA,qCA4DtB;AACL;AADK,oBAEEG,OAFF,GAEa,KAAKV,KAFlB,CAEEU,OAFF;;AAGL,oBAAI,CAACA,QAAQP,QAAb,EAAuB,OAAO,IAAP;AACvB,uBAAOQ,gBAAMC,QAAN,CAAeC,IAAf,CAAoB,KAAKb,KAAL,CAAWc,QAA/B,CAAP;AACH;AAjE8B;;AAAA;AAAA,MAgBbH,gBAAMI,SAhBO;;AAoEnC,QAAMC,kBAAkB,SAAlBA,eAAkB,CAACd,KAAD,CAAO,cAAP,EAA0B;AAChD,eAAO;AACLQ,qBAASR,MAAMQ;AADV,SAAP;AAGD,KAJD;;AAMA,WAAO,yBAAQM,eAAR,EAAyBlB,OAAzB,CAAP;AACH,CA3ED;;AA6EA,IAAMmB,cAAczB,cAAc,MAAd,CAApB;AACA,IAAM0B,iBAAiB1B,cAAc,SAAd,CAAvB;AACA,IAAM2B,gBAAgB3B,cAAc,QAAd,CAAtB;;QAESyB,W,GAAAA,W;QAAaC,c,GAAAA,c;QAAgBC,a,GAAAA,a;kBACvB3B,a","file":"History.js","sourcesContent":["/**\n * Created by sidchik on 28.03.17.\n */\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { createHashHistory, createBrowserHistory, createMemoryHistory } from 'history';\nimport { _setRouting } from '../actions/routing';\n\nconst createHistory = (historyType) => {\n    let historyCreator;\n    switch (historyType) {\n        case 'hash':\n            historyCreator = createHashHistory;\n            break;\n        case 'browser':\n            historyCreator = createBrowserHistory;\n            break;\n        case 'memory':\n            historyCreator = createMemoryHistory;\n            break;\n        default:\n            historyCreator = createHashHistory;\n    }\n\n    class History extends React.Component {\n        history = historyCreator();\n\n\n        extractQuery(query) {\n            return {};\n        }\n\n        constructor(props) {\n            super(props);\n            this.state = {\n                location: null,\n                action: null\n            };\n            props.dispatch(_setRouting({\n                historyType: historyType,\n                history: this.history,\n                location: this.history.location,\n                query: this.extractQuery(),\n            }));\n\n            this.unlisten = this.history.listen((location, action) => {\n                // location is an object like window.location\n                this.setState({\n                    location: location,\n                    action: action\n                }, function () {\n                    props.dispatch(_setRouting({\n                        location: this.state.location,\n                        query: this.extractQuery(),\n                    }));\n                });\n            })\n\n        }\n\n        componentWillMount() {\n\n        }\n\n        componentWillUnmount() {\n            this.unlisten();\n        }\n\n        render() {\n            // # render only on ready\n            const {routing} = this.props;\n            if (!routing.location) return null;\n            return React.Children.only(this.props.children);\n        }\n    }\n\n    const mapStateToProps = (state /*, ownProps*/) => {\n      return {\n        routing: state.routing\n      }\n    };\n\n    return connect(mapStateToProps)(History);\n};\n\nconst HashHistory = createHistory('hash');\nconst BrowserHistory = createHistory('browser');\nconst MemoryHistory = createHistory('memory');\n\nexport { HashHistory, BrowserHistory, MemoryHistory }\nexport default createHistory;"]}